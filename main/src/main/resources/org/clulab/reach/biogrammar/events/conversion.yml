- name: convert_with_controller
  label: Conversion # Refers to the entry in the taxonomy
  action: mkBioMention
  priority: ${ priority }
  pattern: |
      trigger = [lemma=/convert|rearrange|phosphorylate|deaminate|
                        isomerise|isomerize/ & tag=/^V/]
      controller:BioChemicalEntity*  = nsubj nn?
      substrate:Simple_chemical+ = dobj | acomp
      product:Simple_chemical+ = (dobj? prep_to) | (acomp? prep_to)

- name: catalyze_dobj
  label: Conversion
  action: mkBioMention
  priority: ${ priority }
  pattern: |
    trigger = [lemma=/catalyze|catalyse/ & tag=/^V/]
    controller:BioChemicalEntity+ = nsubj
    substrate:Simple_chemical+ =
           dobj | (dobj [lemma=/conversion|synthesis/])? prep_of
    product:Simple_chemical+ =
           (dobj [lemma=/conversion|synthesis/])? prep_of? prep_to

- name: conversion
  label: Conversion
  action: mkBioMention
  priority: ${ priority }
  pattern: |
      trigger = [lemma=/conversion/ & tag=/^NN/]
      controller:BioChemicalEntity* = prep_of? prep_by appos?
      substrate:Simple_chemical+ = prep_of
      product:Simple_chemical+ = prep_of? prep_to

- name: conversion_token
  label: Conversion
  action: mkBioMention
  priority: ${ priority }
  type: token
  pattern: |
      @controller:BioChemicalEntity (?<trigger> [lemma=convert])
      @substrate:Simple_chemical/^(in)?to$/
      @product:Simple_chemical

- name: convert_passive
  label: Conversion # Refers to the entry in the taxonomy
  action: mkBioMention
  priority: ${ priority }
  pattern: |
      trigger = [lemma=/convert|rearrange/ & tag=/^V/]
      substrate:Simple_chemical+ = nsubjpass
      product:Simple_chemical+ = prep_to | prep_into
      controller:BioChemicalEntity* = prep_by | agent

# Should conversions actually be complex events?
# "X synthesis from Y"
# "synthesis of X from Y"
# "the interconversion of X and Y"
# "A catalyzes the interconversion of X and Y"
#
# "A interconverts B with C"
# "A interconverts B and C"
